plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.3'
    implementation 'com.jayway.jsonpath:json-path:2.9.0'

    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

checkstyle {
    sourceSets = [project.sourceSets.main, project.sourceSets.test] as Collection<SourceSet>

    ignoreFailures = false
    maxWarnings = 0
    showViolations = true
}

tasks.named('test') {
    useJUnitPlatform()
}
